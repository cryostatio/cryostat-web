// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<EventTemplates /> renders correctly 1`] = `
Array [
  <h2>
    Unexpected Application Error!
  </h2>,
  <h3
    style={
      Object {
        "fontStyle": "italic",
      }
    }
  >
    Cannot read properties of null (reading 'offsetWidth')
  </h3>,
  <pre
    style={
      Object {
        "backgroundColor": "rgba(200,200,200, 0.5)",
        "padding": "0.5rem",
      }
    }
  >
    TypeError: Cannot read properties of null (reading 'offsetWidth')
    at /home/thvo/workspace/cryostat-web/node_modules/@patternfly/react-table/dist/js/components/Table/Td.js:136:38
    at invokePassiveEffectCreate (/home/thvo/workspace/cryostat-web/node_modules/react-test-renderer/cjs/react-test-renderer.development.js:14504:20)
    at HTMLUnknownElement.callCallback (/home/thvo/workspace/cryostat-web/node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11391:14)
    at HTMLUnknownElement.callTheUserObjectsOperation (/home/thvo/workspace/cryostat-web/node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
    at innerInvokeEventListeners (/home/thvo/workspace/cryostat-web/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:338:25)
    at invokeEventListeners (/home/thvo/workspace/cryostat-web/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:274:3)
    at HTMLUnknownElementImpl._dispatch (/home/thvo/workspace/cryostat-web/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:221:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/thvo/workspace/cryostat-web/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:94:17)
    at HTMLUnknownElement.dispatchEvent (/home/thvo/workspace/cryostat-web/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:231:34)
    at Object.invokeGuardedCallbackDev (/home/thvo/workspace/cryostat-web/node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11440:16)
    at invokeGuardedCallback (/home/thvo/workspace/cryostat-web/node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11499:31)
    at flushPassiveEffectsImpl (/home/thvo/workspace/cryostat-web/node_modules/react-test-renderer/cjs/react-test-renderer.development.js:14591:9)
    at unstable_runWithPriority (/home/thvo/workspace/cryostat-web/node_modules/scheduler/cjs/scheduler.development.js:468:12)
    at runWithPriority (/home/thvo/workspace/cryostat-web/node_modules/react-test-renderer/cjs/react-test-renderer.development.js:2486:10)
    at flushPassiveEffects (/home/thvo/workspace/cryostat-web/node_modules/react-test-renderer/cjs/react-test-renderer.development.js:14464:14)
    at flushActWork (/home/thvo/workspace/cryostat-web/node_modules/react-test-renderer/cjs/react-test-renderer.development.js:15227:14)
    at flushWorkAndMicroTasks (/home/thvo/workspace/cryostat-web/node_modules/react-test-renderer/cjs/react-test-renderer.development.js:15239:5)
    at /home/thvo/workspace/cryostat-web/node_modules/react-test-renderer/cjs/react-test-renderer.development.js:15318:11
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
  </pre>,
  <p>
    ðŸ’¿ Hey developer ðŸ‘‹
  </p>,
  <p>
    You can provide a way better UX than this when your app throws errors by providing your own 
    <code
      style={
        Object {
          "backgroundColor": "rgba(200,200,200, 0.5)",
          "padding": "2px 4px",
        }
      }
    >
      ErrorBoundary
    </code>
     or
     
    <code
      style={
        Object {
          "backgroundColor": "rgba(200,200,200, 0.5)",
          "padding": "2px 4px",
        }
      }
    >
      errorElement
    </code>
     prop on your route.
  </p>,
]
`;
